services:
  gpio_control:
    image: nkoeppe/gpio_control:latest
    build:
      context: ./gpio_control
      dockerfile: Dockerfile
    container_name: gpio_control
    privileged: true
    environment:
      - CONTROL_CONFIG=/config/control_config.json
      - PYTHONPATH=/app
    volumes:
      - ./gpio_control:/app
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    ports:
      - 5000:5000
    restart: always

  gpio_deamon:
    image: zinen2/alpine-pigpiod:latest
    container_name: gpio_deamon
    privileged: true
    ports:
      - 8888:8888
    restart: always

  serial_proxy:
    build: ./serial_proxy
    volumes:
      - ./serial_proxy:/app
    devices:
      - "/dev/ttyACM0:/dev/ttyUSB0"
    depends_on:
      - mqtt
    restart: always


  mqtt:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto-conf:/mosquitto/config
    restart: always


  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=myuser
      - DOCKER_INFLUXDB_INIT_PASSWORD=mypassword
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=sensors
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    restart: always

  telegraf:
    image: telegraf:latest
    depends_on:
      - mqtt
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - INFLUX_TOKEN=-bIb9lFQDw74ylUkbVnNGPr5ISblu2XovqMus8XTK9Zl9XcA_SbVqEG5It3lbhZEM_k6W5zr574yjw7QrW6KYQ==
    restart: always

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: always

  # frontend:
  #   build: ./frontend
  #   container_name: frontend
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - gpio_control

  # camera_service:
  #   build: ./camera_service
  #   container_name: camera_service
  #   privileged: true
  #   devices:
  #     - "/dev/video14:/dev/video0" 
  #   ports:
  #     - "8081:8081" 
  #   restart: always

  motioneye:
    image: ccrisan/motioneye:master-armhf
    container_name: motioneye
    hostname: motioneye
    ports:
      - "8081:8081" 
      - "8765:8765"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/motioneye:/etc/motioneye
      - /var/lib/motioneye:/var/lib/motioneye
    devices:
      # - "/dev/video14:/dev/video14" 
      - "/dev/video15:/dev/video15" 

    restart: always

volumes:
  grafana-storage:
  influxdb-data: